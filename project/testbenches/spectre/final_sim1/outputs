_outputList = nil
 _envSaveOptions = nil
savedComponent = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->inLastSet = nil
tmp1->name = nil
tmp1->expression = nil
tmp1->signal = "/pga_vin"
tmp1->type = 'net
tmp1->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y2"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp1->value = nil
tmp1->plot = 't
tmp1->save = nil
tmp1->march = nil
tmp1->index = 1
(unless tmp2
tmp2 = make_sevOutputStruct()
)
(unless tmp2
tmp2 = (ncons nil)
)
tmp2->inLastSet = nil
tmp2->name = nil
tmp2->expression = nil
tmp2->signal = "/b0"
tmp2->type = 'net
tmp2->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y6"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp2->value = nil
tmp2->plot = 't
tmp2->save = nil
tmp2->march = nil
tmp2->index = 2
(unless tmp3
tmp3 = make_sevOutputStruct()
)
(unless tmp3
tmp3 = (ncons nil)
)
tmp3->inLastSet = nil
tmp3->name = nil
tmp3->expression = nil
tmp3->signal = "/b1"
tmp3->type = 'net
tmp3->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y3"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp3->value = nil
tmp3->plot = 't
tmp3->save = nil
tmp3->march = nil
tmp3->index = 3
(unless tmp4
tmp4 = make_sevOutputStruct()
)
(unless tmp4
tmp4 = (ncons nil)
)
tmp4->inLastSet = nil
tmp4->name = nil
tmp4->expression = nil
tmp4->signal = "/b2"
tmp4->type = 'net
tmp4->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y7"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp4->value = nil
tmp4->plot = 't
tmp4->save = nil
tmp4->march = nil
tmp4->index = 4
(unless tmp5
tmp5 = make_sevOutputStruct()
)
(unless tmp5
tmp5 = (ncons nil)
)
tmp5->inLastSet = nil
tmp5->name = nil
tmp5->expression = nil
tmp5->signal = "/b3"
tmp5->type = 'net
tmp5->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y8"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp5->value = nil
tmp5->plot = 't
tmp5->save = nil
tmp5->march = nil
tmp5->index = 5
(unless tmp6
tmp6 = make_sevOutputStruct()
)
(unless tmp6
tmp6 = (ncons nil)
)
tmp6->inLastSet = nil
tmp6->name = nil
tmp6->expression = nil
tmp6->signal = "/b4"
tmp6->type = 'net
tmp6->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y9"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp6->value = nil
tmp6->plot = 't
tmp6->save = nil
tmp6->march = nil
tmp6->index = 6
(unless tmp7
tmp7 = make_sevOutputStruct()
)
(unless tmp7
tmp7 = (ncons nil)
)
tmp7->inLastSet = nil
tmp7->name = nil
tmp7->expression = nil
tmp7->signal = "/b5"
tmp7->type = 'net
tmp7->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y4"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp7->value = nil
tmp7->plot = 't
tmp7->save = nil
tmp7->march = nil
tmp7->index = 7
(unless tmp8
tmp8 = make_sevOutputStruct()
)
(unless tmp8
tmp8 = (ncons nil)
)
tmp8->inLastSet = nil
tmp8->name = nil
tmp8->expression = nil
tmp8->signal = "/b6"
tmp8->type = 'net
tmp8->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y2"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp8->value = nil
tmp8->plot = 't
tmp8->save = nil
tmp8->march = nil
tmp8->index = 8
(unless tmp9
tmp9 = make_sevOutputStruct()
)
(unless tmp9
tmp9 = (ncons nil)
)
tmp9->inLastSet = nil
tmp9->name = nil
tmp9->expression = nil
tmp9->signal = "/b7"
tmp9->type = 'net
tmp9->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y5"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp9->value = nil
tmp9->plot = 't
tmp9->save = nil
tmp9->march = nil
tmp9->index = 9
(unless tmp10
tmp10 = make_sevOutputStruct()
)
(unless tmp10
tmp10 = (ncons nil)
)
tmp10->inLastSet = nil
tmp10->name = nil
tmp10->expression = nil
tmp10->signal = "/vx"
tmp10->type = 'net
tmp10->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y6"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp10->value = nil
tmp10->plot = 't
tmp10->save = nil
tmp10->march = nil
tmp10->index = 10
(unless tmp11
tmp11 = make_sevOutputStruct()
)
(unless tmp11
tmp11 = (ncons nil)
)
tmp11->inLastSet = nil
tmp11->name = nil
tmp11->expression = nil
tmp11->signal = "/I13/Vsample"
tmp11->type = 'net
tmp11->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y3"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp11->value = nil
tmp11->plot = 't
tmp11->save = nil
tmp11->march = nil
tmp11->index = 11
(unless tmp12
tmp12 = make_sevOutputStruct()
)
(unless tmp12
tmp12 = (ncons nil)
)
tmp12->inLastSet = nil
tmp12->name = nil
tmp12->expression = nil
tmp12->signal = "/I13/phi2"
tmp12->type = 'net
tmp12->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y7"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp12->value = nil
tmp12->plot = 't
tmp12->save = nil
tmp12->march = nil
tmp12->index = 12
(unless tmp13
tmp13 = make_sevOutputStruct()
)
(unless tmp13
tmp13 = (ncons nil)
)
tmp13->inLastSet = nil
tmp13->name = nil
tmp13->expression = nil
tmp13->signal = "/Vdda"
tmp13->type = 'net
tmp13->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y8"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp13->value = nil
tmp13->plot = 't
tmp13->save = nil
tmp13->march = nil
tmp13->index = 13
(unless tmp14
tmp14 = make_sevOutputStruct()
)
(unless tmp14
tmp14 = (ncons nil)
)
tmp14->inLastSet = nil
tmp14->name = nil
tmp14->expression = nil
tmp14->signal = "/Vref"
tmp14->type = 'net
tmp14->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y2"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp14->value = nil
tmp14->plot = 't
tmp14->save = nil
tmp14->march = nil
tmp14->index = 14
(unless tmp15
tmp15 = make_sevOutputStruct()
)
(unless tmp15
tmp15 = (ncons nil)
)
tmp15->inLastSet = nil
tmp15->name = nil
tmp15->expression = nil
tmp15->signal = "/I13/phi1"
tmp15->type = 'net
tmp15->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y5"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp15->value = nil
tmp15->plot = 't
tmp15->save = nil
tmp15->march = nil
tmp15->index = 15
(unless tmp16
tmp16 = make_sevOutputStruct()
)
(unless tmp16
tmp16 = (ncons nil)
)
tmp16->inLastSet = nil
tmp16->name = nil
tmp16->expression = nil
tmp16->signal = "/pga_out"
tmp16->type = 'net
tmp16->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y9"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp16->value = nil
tmp16->plot = 't
tmp16->save = nil
tmp16->march = nil
tmp16->index = 16
(unless tmp17
tmp17 = make_sevOutputStruct()
)
(unless tmp17
tmp17 = (ncons nil)
)
tmp17->inLastSet = nil
tmp17->name = nil
tmp17->expression = nil
tmp17->signal = "/adc_in"
tmp17->type = 'net
tmp17->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y4"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp17->value = nil
tmp17->plot = 't
tmp17->save = nil
tmp17->march = nil
tmp17->index = 17
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17)
)
_outputList = nconc( _outputList savedComponent) 
_envSaveOptions = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'assertsInfo
list(tmp1 tmp2)
)
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'subcktsInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = 'primitivesInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp4 = (let
(tmp1 tmp2)
tmp1 = 'outputParamInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp5 = (let
(tmp1 tmp2)
tmp1 = 'elementInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp6 = (let
(tmp1 tmp2)
tmp1 = 'modelParamInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp7 = (let
(tmp1 tmp2)
tmp1 = 'separator3
tmp2 = ""
list(tmp1 tmp2)
)
tmp8 = (let
(tmp1 tmp2)
tmp1 = 'saveahdlvars
tmp2 = ""
list(tmp1 tmp2)
)
tmp9 = (let
(tmp1 tmp2)
tmp1 = 'separator2
tmp2 = ""
list(tmp1 tmp2)
)
tmp10 = (let
(tmp1 tmp2)
tmp1 = 'useprobes
tmp2 = ""
list(tmp1 tmp2)
)
tmp11 = (let
(tmp1 tmp2)
tmp1 = 'subcktprobelvl
tmp2 = ""
list(tmp1 tmp2)
)
tmp12 = (let
(tmp1 tmp2)
tmp1 = 'currents
tmp2 = ""
list(tmp1 tmp2)
)
tmp13 = (let
(tmp1 tmp2)
tmp1 = 'separator1
tmp2 = ""
list(tmp1 tmp2)
)
tmp14 = (let
(tmp1 tmp2)
tmp1 = 'nestlvl
tmp2 = ""
list(tmp1 tmp2)
)
tmp15 = (let
(tmp1 tmp2)
tmp1 = 'pwr
tmp2 = ""
list(tmp1 tmp2)
)
tmp16 = (let
(tmp1 tmp2)
tmp1 = 'save
tmp2 = "allpub"
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16)
)
savedComponent = list( _outputList _envSaveOptions ) 
_outputList = 'unbound
 _envSaveOptions = 'unbound
